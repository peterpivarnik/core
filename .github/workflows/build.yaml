name: Java CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout source
      - uses: actions/checkout@v3

      # 2. Set up Java 21
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      # 3. Import GPG key
      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # Ensure correct GPG directory permissions
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          
          # Configure GPG for batch mode and loopback pinentry
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          
          # Decode and import the key
          echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --batch --import
          
          # List imported keys
          gpg --list-secret-keys

      # 4. Build and run tests
      - name: Build with tests
        run: mvn clean verify

      # 5. Configure Git for release
      - name: Configure Git user
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"

      # 6. Prepare Maven release
      - name: Release prepare
        run: mvn -B release:prepare

      # 7. Publish to Central
      - name: Publish to Central
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # Create Maven settings.xml with Sonatype credentials
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings>
            <servers>
              <server>
                <id>central</id>
                <username>${MAVEN_USERNAME}</username>
                <password>${MAVEN_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF

          # Publish to Central
          mvn central:publish

      # 8. Perform Maven release
      - name: Release perform
        run: mvn release:perform -Darguments="-Dmaven.deploy.skip=true"
